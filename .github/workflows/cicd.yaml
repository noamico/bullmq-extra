name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Semver Check
        uses: cocogitto/cocogitto-action@v3
        with:
          check-latest-tag-only: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18'

      - name: Configure NPM
        run: echo "NPM_TOKEN=${{ secrets.NPM_TOKEN }}" >> $GITHUB_ENV

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: |
          npm run build

      - name: Run Tests
        run: |
           npm test

      - name: Semver release
        if: github.ref == 'refs/heads/main'
        uses: cocogitto/cocogitto-action@v3
        id: release
        with:
          check-latest-tag-only: true
          release: true

      - name: Update package.json version
        if: github.ref == 'refs/heads/main' && steps.release.outputs.version
        run: |
          npm version ${{ steps.release.outputs.version }} --no-git-tag-version

      - name: Commit and push updated package.json
        if: github.ref == 'refs/heads/main' && steps.release.outputs.version
        run: |
          git config --local user.email "orrgal@gmail.com"
          git config --local user.name "GitHub Action"
          git commit -am "chore: npm version to ${{ steps.release.outputs.version }}"
          git push

      - name: Publish
        if: github.ref == 'refs/heads/main' && steps.release.outputs.version
        run: |
          echo $NPM_TOKEN
          cat .npmrc
          npm publish

      - name: Build and push Docker image to ghcr.io
        if: github.ref == 'refs/heads/main'
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker build -t ghcr.io/${{ github.repository_owner }}/bullmq-broker:${{ steps.release.outputs.version }} .
          docker tag ghcr.io/${{ github.repository_owner }}/bullmq-broker:${{ steps.release.outputs.version }} ghcr.io/${{ github.repository_owner }}/bullmq-broker:latest
          docker push ghcr.io/${{ github.repository_owner }}/bullmq-broker:${{ steps.release.outputs.version }}
          docker push ghcr.io/${{ github.repository_owner }}/bullmq-broker:latest
